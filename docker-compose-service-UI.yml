version: "3.4"
services:
  s_debeziumui:
    image: debezium/debezium-ui
    container_name: c_debezium-ui
    ports:
      - "${Debezium_UI_Port}:${Debezium_UI_Port}"
    restart: always
    environment:
      - KAFKA_CONNECT_URIS=http://s_debeziumconnect:${Debeziumconnect_Port}
    networks:
      - net_backendservices
    env_file:
      - ./.env
  s_kafka-ui:
    container_name: c_kafka-ui
    image: provectuslabs/kafka-ui
    ports:
      - "${Kafka_UI_Port}:${Kafka_UI_Port}"
    restart: always
    environment:
      - SERVER_PORT=${Kafka_UI_Port}
      - KAFKA_CLUSTERS_0_NAME=host.docker.internal
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=s_kafka:${Kafka_TCP_Port}   
    networks:
      - net_backendservices
    env_file:
      - ./.env
  redisinsight:
    container_name: c_redisinsight
    image: redislabs/redisinsight:latest
    networks:
      - net_backendservices
    ports:
      -  ${RedisInsight_Port}:${RedisInsight_Port}
    env_file:
      - ./.env
  s_kibana:
    container_name: c_kibana
    image: docker.elastic.co/kibana/kibana:7.10.2
    env_file:
      - ./.env
    environment:
      - ELASTICSEARCH_HOSTS=["http://s_elasticsearch:${Elastic_TCP_Port}"]
      - elasticsearch.sniffOnStart=true
      - ES_JAVA_OPTS=-Xms3g -Xmx3g
      - xpack.infra.sources.default.metricAlias=metricbeat-*
      - XPACK_MONITORING_KIBANA_COLLECTION_ENABLED=false
      - ELASTIC_PASSWORD=${ElasticSearch_Password}
      - ELASTICSEARCH_USERNAME=${ElasticSearch_UserName}
    ports:
      - "${Kibana_Port}:${Kibana_Port}"
    depends_on:
      - s_elasticsearch
    networks:
      - net_backendservices
  s_mongo-express:
    container_name: c_mongo-express
    image: mongo-express
    restart: always
    ports:
      - ${MongoExpress_Port}:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: s_mongo
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${Mongo_UserName}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${Mongo_Password}
      ME_CONFIG_BASICAUTH_USERNAME: ${Mongo_UserName}
      ME_CONFIG_BASICAUTH_PASSWORD: ${Mongo_Password}
      ME_CONFIG_MONGODB_URL: mongo://${Mongo_UserName}:${Mongo_Password}@s_mongo:${Mongo_Port}
    networks:
      - net_backendservices
    depends_on:
      - s_mongo
    env_file:
      - ./.env     
networks:
  net_frontend:
    driver: bridge
    external: true
  net_backendservices:
    driver: bridge
    external: true